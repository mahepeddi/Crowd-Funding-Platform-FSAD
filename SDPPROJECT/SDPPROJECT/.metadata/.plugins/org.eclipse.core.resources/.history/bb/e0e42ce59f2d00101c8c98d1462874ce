package com.klef.fsd.project.service;

import java.util.List;
import java.util.Optional;

	import org.springframework.beans.factory.annotation.Autowired;
	import org.springframework.stereotype.Service;

	import com.klef.fsd.project.model.Admin;
	import com.klef.fsd.project.model.Donor;
	import com.klef.fsd.project.model.Manager;
	import com.klef.fsd.project.repository.AdminRepository;
	import com.klef.fsd.project.repository.DonorRepository;
	import com.klef.fsd.project.repository.CampaignRepository;
	import com.klef.fsd.project.repository.ManagerRepository;

	@Service
	public class AdminServiceImpl implements AdminService
	{
		@Autowired
	    private AdminRepository adminRepository;
		
		@Autowired
	    private ManagerRepository managerRepository;
		
		@Autowired
		private DonorRepository donorRepository;
		
		@Autowired
		private CampaignRepository campaignRepository;
		
		@Override
		public Admin checkadminlogin(String username, String password) 
		{
			return adminRepository.findByUsernameAndPassword(username, password);
		}

		@Override
		public String addcampaignmanager(Manager manager) 
		{
			managerRepository.save(manager);
			return "Campaign Manager Added Successfully";
		}

		@Override
		public List<Manager> displaycampaignmanagers() 
		{
			return managerRepository.findAll();
		}

		@Override
		public List<Donor> displaydonors() 
		{
			return donorRepository.findAll();
		}

		@Override
		public String deletedonor(int did) 
		{
		    Optional<Donor> donor = donorRepository.findById(did);
		    
		    if (donor.isPresent()) 
		    {	
		        donorRepository.deleteById(did);
		        return "donor Deleted Successfully";
		    } 
		    else 
		    {
		        return "donor ID Not Found"; 
		    }
		}

		@Override
		public String deletemanager(int mid) 
		{
	        Optional<Manager> manager = managerRepository.findById(mid);
		    
		    if (manager.isPresent()) 
		    {	
		        managerRepository.deleteById(mid);
		        return "Manager Deleted Successfully";
		    } 
		    else 
		    {
		        return "Manager ID Not Found";
		    }
		}

		@Override
		public long displaydonorcount() 
		{
			return donorRepository.count();
		}

		@Override
		public long displaymanagercount() 
		{
			return managerRepository.count();
		}

		@Override
		public long displaycampaigncount() 
		{
			return campaignRepository.count();
		}

}