package com.klef.fsd.project.controller;

import java.sql.Blob;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.klef.fsd.project.dto.DonationDTO;
import com.klef.fsd.project.model.Donation;
import com.klef.fsd.project.service.DonationService;

@RestController
@RequestMapping("/donation")
@CrossOrigin("*")
public class DonationsController 
{
	 @Autowired
	 private DonationService donationService;
	 @PostMapping("/adddonation")
	 public ResponseEntity<String> addDonation
	 (
	     @RequestParam String category,
	     @RequestParam String name,
	         @RequestParam String description,
	         @RequestParam double members,
	         @RequestParam double donations,
	         catch (Exception e) {
	         return ResponseEntity.status(500).body("Error: " + e.getMessage());
	     }
	 }

	 
	 // to view or display all products
	 
	 @GetMapping("viewalldonatins")
	 public ResponseEntity<List<DonationDTO>> viewalldonations() 
	 {
	     List<Donation> donationList = donationService.viewallDonations();
	     List<DonationDTO> donatinDTOList = new ArrayList<>();

	     for (Donation d : donationList) {
	         DonationDTO dto = new DonationDTO();
	         dto.setId(p.getId());
	         dto.setCategory(p.getCategory());
	         dto.setName(p.getName());
	         dto.setDescription(p.getDescription());
	         dto.setMembers(p.getMembers());
	         dto.setDonations(p.getDonations());
	         donationDTOList.add(dto);
	     }

	     return ResponseEntity.ok(donationDTOList);
	 }	   
		// to view or display product by id

	   @PostMapping("displaydonationbyid")
	   public ResponseEntity<DonationDTO> displaydonationdemo(@RequestParam int did)
	   {
		   Donation d=productService.viewDonationById(did);
		   
		     DonationDTO dto = new DonationDTO();
		     
	         dto.setId(p.getId());
	         dto.setCategory(p.getCategory());
	         dto.setName(p.getName());
	         dto.setDescription(p.getDescription());
	         dto.setMembers(p.getMembers());
	         dto.setDonations(p.getDonations());
	         donationDTOList.add(dto);

		   
		   return ResponseEntity.ok(dto);
	   }
	   


}